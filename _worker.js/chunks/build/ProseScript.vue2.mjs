import{v as e}from"./server.mjs";import{s as o}from"../routes/renderer.mjs";import"../nitro/nitro.mjs";const r=e.defineComponent({__name:"ProseScript",__ssrInlineRender:!0,props:{src:{type:String,default:""}},setup:r=>(r,s,t,n)=>{e.unref(false)?s(`<div${o(n)}> Rendering the <code>script</code> element is dangerous and is disabled by default. Consider implementing your own <code>ProseScript</code> element to have control over script rendering. </div>`):s("\x3c!----\x3e")}}),s=r.setup;r.setup=(o,r)=>{const t=e.useSSRContext();return(t.modules||(t.modules=new Set)).add("node_modules/.pnpm/@nuxtjs+mdc@0.16.1_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue"),s?s(o,r):void 0};export{r as default};
//# sourceMappingURL=ProseScript.vue2.mjs.map
